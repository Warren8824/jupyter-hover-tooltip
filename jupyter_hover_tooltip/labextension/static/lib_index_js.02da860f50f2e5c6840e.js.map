{"version":3,"file":"lib_index_js.02da860f50f2e5c6840e.js","mappings":";;;;;;;;;AAAa;AACb;AACA,4BAA4B,+DAA+D,iBAAiB;AAC5G;AACA,oCAAoC,MAAM,+BAA+B,YAAY;AACrF,mCAAmC,MAAM,mCAAmC,YAAY;AACxF,gCAAgC;AAChC;AACA,KAAK;AACL;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D,qBAAqB,mBAAO,CAAC,8EAAoB;AACjD,gBAAgB,mBAAO,CAAC,4EAAmB;AAC3C,gCAAgC,mBAAO,CAAC,4GAAmC;AAC3E;AACA,kBAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gEAAgE,QAAQ;AACxE;AACA,iCAAiC;AACjC;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,oEAAoE;AACpE;AACA,SAAS;AACT;AACA","sources":["webpack://jupyter-hover-tooltip/./lib/index.js"],"sourcesContent":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst disposable_1 = require(\"@lumino/disposable\");\nconst cells_1 = require(\"@jupyterlab/cells\");\nconst rendermime_interfaces_1 = require(\"@jupyterlab/rendermime-interfaces\");\nconst PLUGIN_ID = 'jupyter-hover-tooltip:plugin';\nexports.default = {\n    id: PLUGIN_ID,\n    autoStart: true,\n    activate: (app) => {\n        app.docRegistry.addWidgetExtension('Notebook', {\n            createNew: (notebook) => {\n                function processCell(cell) {\n                    if (cell instanceof cells_1.MarkdownCell) {\n                        const links = cell.node.getElementsByTagName('a');\n                        Array.from(links).forEach(link => {\n                            if (link.href.endsWith('.py')) {\n                                link.addEventListener('mouseover', (e) => __awaiter(this, void 0, void 0, function* () {\n                                    const response = yield fetch(link.href);\n                                    const content = yield response.text();\n                                    // Create tooltip\n                                    const tooltip = document.createElement('div');\n                                    tooltip.className = 'jp-tooltip';\n                                    tooltip.style.position = 'absolute';\n                                    tooltip.style.zIndex = '1000';\n                                    tooltip.innerHTML = `<pre>${content}</pre>`;\n                                    document.body.appendChild(tooltip);\n                                }));\n                            }\n                        });\n                    }\n                }\n                notebook.model.cells.changed.connect((_, args) => {\n                    if (args.type === 'add') {\n                        processCell(notebook.widgets[args.newIndex]);\n                    }\n                });\n                return new disposable_1.DisposableDelegate(() => { });\n            }\n        });\n    }\n};\n"],"names":[],"sourceRoot":""}